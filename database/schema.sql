-- ESP8266 IoT Platform Database Schema
-- Generated from backend/src/models/database.js

-- Users table with notification preferences
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL DEFAULT 'viewer',
    phone VARCHAR(20),
    notification_email BOOLEAN DEFAULT true,
    notification_sms BOOLEAN DEFAULT false,
    notification_push BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Locations table
CREATE TABLE IF NOT EXISTS locations (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    timezone VARCHAR(50) DEFAULT 'UTC',
    latitude DECIMAL(10, 8),
    longitude DECIMAL(11, 8),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Devices table with firmware versioning
CREATE TABLE IF NOT EXISTS devices (
    id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    location_id INTEGER REFERENCES locations(id),
    device_type VARCHAR(50) DEFAULT 'esp8266',
    firmware_version VARCHAR(20),
    target_firmware_version VARCHAR(20),
    hardware_version VARCHAR(20),
    wifi_ssid VARCHAR(255),
    wifi_password VARCHAR(255),
    last_heartbeat TIMESTAMP,
    status VARCHAR(20) DEFAULT 'offline',
    ip_address INET,
    mac_address MACADDR,
    uptime_seconds INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Sensor types definition
CREATE TABLE IF NOT EXISTS sensor_types (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    unit VARCHAR(20),
    min_value DECIMAL(10, 4),
    max_value DECIMAL(10, 4),
    description TEXT,
    icon VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Device sensors (multiple sensors per device)
CREATE TABLE IF NOT EXISTS device_sensors (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    sensor_type_id INTEGER REFERENCES sensor_types(id),
    pin VARCHAR(10) NOT NULL, -- A0, D1, D2, etc.
    name VARCHAR(100) NOT NULL,
    calibration_offset DECIMAL(10, 4) DEFAULT 0,
    calibration_multiplier DECIMAL(10, 4) DEFAULT 1,
    enabled BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(device_id, pin)
);

-- Enhanced telemetry with multiple sensor support
CREATE TABLE IF NOT EXISTS telemetry (
    id BIGSERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id),
    device_sensor_id INTEGER REFERENCES device_sensors(id),
    raw_value DECIMAL(10, 4) NOT NULL,
    processed_value DECIMAL(10, 4) NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    metadata JSONB -- Additional sensor-specific data
);

-- Sensor thresholds and rules
CREATE TABLE IF NOT EXISTS sensor_rules (
    id SERIAL PRIMARY KEY,
    device_sensor_id INTEGER REFERENCES device_sensors(id) ON DELETE CASCADE,
    rule_name VARCHAR(100) NOT NULL,
    rule_type VARCHAR(20) NOT NULL, -- 'threshold', 'rate_of_change', 'pattern'
    condition VARCHAR(20) NOT NULL, -- 'greater_than', 'less_than', 'equals', 'between'
    threshold_min DECIMAL(10, 4),
    threshold_max DECIMAL(10, 4),
    time_window_minutes INTEGER DEFAULT 1,
    severity VARCHAR(20) DEFAULT 'medium', -- 'low', 'medium', 'high', 'critical'
    enabled BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Device configurations
CREATE TABLE IF NOT EXISTS device_configs (
    device_id VARCHAR(50) PRIMARY KEY REFERENCES devices(id) ON DELETE CASCADE,
    armed BOOLEAN DEFAULT true,
    heartbeat_interval INTEGER DEFAULT 300,
    config_version INTEGER DEFAULT 1,
    ota_enabled BOOLEAN DEFAULT true,
    debug_mode BOOLEAN DEFAULT false,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Alert rules and thresholds
CREATE TABLE IF NOT EXISTS alert_rules (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    sensor_pin INTEGER NOT NULL,
    sensor_type VARCHAR(50) NOT NULL,
    condition_type VARCHAR(20) NOT NULL, -- 'greater_than', 'less_than', 'equals', 'not_equals'
    threshold_value NUMERIC NOT NULL,
    severity VARCHAR(20) NOT NULL DEFAULT 'medium',
    enabled BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Alerts generated by the system
CREATE TABLE IF NOT EXISTS alerts (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    alert_type VARCHAR(100) NOT NULL,
    severity VARCHAR(20) NOT NULL,
    message TEXT NOT NULL,
    sensor_pin INTEGER,
    sensor_value NUMERIC,
    threshold_value NUMERIC,
    status VARCHAR(20) DEFAULT 'active',
    triggered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    acknowledged_at TIMESTAMP,
    acknowledged_by INTEGER REFERENCES users(id),
    resolved_at TIMESTAMP,
    resolved_by INTEGER REFERENCES users(id),
    notes TEXT,
    resolution_notes TEXT
);

-- Escalation rules
CREATE TABLE IF NOT EXISTS escalation_rules (
    id SERIAL PRIMARY KEY,
    alert_type VARCHAR(100) NOT NULL,
    severity VARCHAR(20) NOT NULL,
    device_id VARCHAR(50) REFERENCES devices(id),
    location_id INTEGER REFERENCES locations(id),
    escalation_delay_minutes INTEGER NOT NULL,
    max_escalation_level INTEGER DEFAULT 3,
    notification_methods JSONB,
    recipients JSONB,
    enabled BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Escalation history
CREATE TABLE IF NOT EXISTS escalation_history (
    id SERIAL PRIMARY KEY,
    alert_id INTEGER REFERENCES alerts(id) ON DELETE CASCADE,
    escalation_rule_id INTEGER REFERENCES escalation_rules(id),
    escalation_level INTEGER NOT NULL,
    escalated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    notification_methods JSONB,
    recipients JSONB,
    manual_trigger BOOLEAN DEFAULT false,
    triggered_by INTEGER REFERENCES users(id),
    notes TEXT
);

-- Firmware versions and OTA management
CREATE TABLE IF NOT EXISTS firmware_versions (
    id SERIAL PRIMARY KEY,
    version VARCHAR(20) NOT NULL UNIQUE,
    device_type VARCHAR(50) NOT NULL,
    binary_data BYTEA,
    binary_url VARCHAR(500),
    checksum VARCHAR(64),
    file_size INTEGER,
    release_notes TEXT,
    is_stable BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- OTA update tracking
CREATE TABLE IF NOT EXISTS ota_updates (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    firmware_version_id INTEGER REFERENCES firmware_versions(id),
    status VARCHAR(20) DEFAULT 'pending',
    progress_percent INTEGER DEFAULT 0,
    error_message TEXT,
    started_at TIMESTAMP,
    completed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- WebSocket connections tracking
CREATE TABLE IF NOT EXISTS websocket_connections (
    id SERIAL PRIMARY KEY,
    connection_id VARCHAR(255) UNIQUE NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    connected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_ping TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_agent TEXT,
    ip_address INET
);

-- Silent mode schedules for quiet hours
CREATE TABLE IF NOT EXISTS silent_mode_schedules (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    location_id INTEGER REFERENCES locations(id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    days_of_week INTEGER[] NOT NULL, -- Array of integers 0-6 (0=Sunday, 6=Saturday)
    timezone VARCHAR(50) DEFAULT 'UTC',
    enabled BOOLEAN DEFAULT true,
    alert_types TEXT[], -- Array of alert types to silence, NULL means all
    severity_threshold VARCHAR(20) DEFAULT NULL, -- Only silence alerts below this severity
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT check_severity CHECK (severity_threshold IS NULL OR severity_threshold IN ('low', 'medium', 'high', 'critical'))
);

-- System communication protocol settings
CREATE TABLE IF NOT EXISTS protocol_settings (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE UNIQUE,
    protocol VARCHAR(10) NOT NULL DEFAULT 'http', -- 'http' or 'mqtt'
    mqtt_broker_host VARCHAR(255),
    mqtt_broker_port INTEGER DEFAULT 1883,
    mqtt_username VARCHAR(100),
    mqtt_password VARCHAR(255),
    mqtt_topic_prefix VARCHAR(100) DEFAULT 'iot',
    mqtt_qos INTEGER DEFAULT 1,
    http_endpoint VARCHAR(500),
    heartbeat_interval INTEGER DEFAULT 300, -- seconds
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT check_protocol CHECK (protocol IN ('http', 'mqtt')),
    CONSTRAINT check_qos CHECK (mqtt_qos >= 0 AND mqtt_qos <= 2)
);

-- Device Groups for organizing devices
CREATE TABLE IF NOT EXISTS device_groups (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    color VARCHAR(7) DEFAULT '#3B82F6', -- hex color code
    created_by INTEGER REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Device Group Membership (many-to-many relationship)
CREATE TABLE IF NOT EXISTS device_group_members (
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES device_groups(id) ON DELETE CASCADE,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(group_id, device_id)
);

-- Device Tags for flexible device labeling
CREATE TABLE IF NOT EXISTS device_tags (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    color VARCHAR(7) DEFAULT '#6B7280', -- hex color code
    description TEXT,
    created_by INTEGER REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Device Tag Assignments (many-to-many relationship)
CREATE TABLE IF NOT EXISTS device_tag_assignments (
    id SERIAL PRIMARY KEY,
    tag_id INTEGER REFERENCES device_tags(id) ON DELETE CASCADE,
    device_id VARCHAR(50) REFERENCES devices(id) ON DELETE CASCADE,
    assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(tag_id, device_id)
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_telemetry_device_sensor_time ON telemetry(device_id, device_sensor_id, timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_telemetry_timestamp ON telemetry(timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_alerts_device_status ON alerts(device_id, status);
CREATE INDEX IF NOT EXISTS idx_alerts_severity_status ON alerts(severity, status);
CREATE INDEX IF NOT EXISTS idx_alerts_created_desc ON alerts(triggered_at DESC);
CREATE INDEX IF NOT EXISTS idx_websocket_user ON websocket_connections(user_id);
CREATE INDEX IF NOT EXISTS idx_ota_device_status ON ota_updates(device_id, status);
CREATE INDEX IF NOT EXISTS idx_escalation_history_alert ON escalation_history(alert_id);
CREATE INDEX IF NOT EXISTS idx_escalation_rules_device_location ON escalation_rules(device_id, location_id);
CREATE INDEX IF NOT EXISTS idx_silent_mode_device_enabled ON silent_mode_schedules(device_id, enabled);
CREATE INDEX IF NOT EXISTS idx_silent_mode_location_enabled ON silent_mode_schedules(location_id, enabled);
CREATE INDEX IF NOT EXISTS idx_protocol_settings_device ON protocol_settings(device_id);

-- Indexes for new tables
CREATE INDEX IF NOT EXISTS idx_device_group_members_group ON device_group_members(group_id);
CREATE INDEX IF NOT EXISTS idx_device_group_members_device ON device_group_members(device_id);
CREATE INDEX IF NOT EXISTS idx_device_tag_assignments_tag ON device_tag_assignments(tag_id);
CREATE INDEX IF NOT EXISTS idx_device_tag_assignments_device ON device_tag_assignments(device_id);

-- Insert default sensor types
INSERT INTO sensor_types (name, unit, min_value, max_value, description, icon) VALUES
('Photodiode', 'lux', 0, 1024, 'Light intensity sensor', 'sun'),
('Temperature', '°C', -40, 125, 'Temperature sensor', 'thermometer'),
('Humidity', '%', 0, 100, 'Relative humidity sensor', 'droplets'),
('Motion', 'boolean', 0, 1, 'PIR motion detector', 'activity'),
('Sound', 'dB', 0, 130, 'Sound level sensor', 'volume-2'),
('Pressure', 'hPa', 300, 1100, 'Atmospheric pressure sensor', 'gauge'),
('Gas', 'ppm', 0, 1000, 'Gas concentration sensor', 'wind'),
('Magnetic', 'boolean', 0, 1, 'Magnetic field detector', 'magnet'),
('Vibration', 'g', 0, 16, 'Vibration/acceleration sensor', 'zap'),
('Distance', 'cm', 0, 400, 'Ultrasonic distance sensor', 'ruler')
ON CONFLICT (name) DO NOTHING;